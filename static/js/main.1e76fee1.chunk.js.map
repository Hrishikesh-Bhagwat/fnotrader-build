{"version":3,"sources":["components/SearchBox.js","components/Dropdown.js","components/OptionToggle.js","components/TablesComp.js","components/OptionStrikeCol.js","pages/optionChain/tableData.js","pages/optionChain/OptionChainTable.js","assets/logo.png","components/DisplayHeader.js","components/ColumnSelect.js","components/ExpiryTableComp.js","pages/optionChain/ExpiryTable.js","pages/optionChain/OptionChainHeader.js","components/ExpiryColumnSelect.js","layouts/OptionChainLayout.js","redux/expiryTableReducer.js","redux/tableColReducer.js","redux/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","textField","borderRadius","height","SearchBox","useState","loading","setLoading","optionData","setOptionData","instrument","useSelector","state","expiryInstrument","dispatch","useDispatch","useEffect","a","axios","get","response","status","data","values","getData","menuOptions","undefined","forEach","tradingName","instrumentId","underlyingName","push","classes","className","Autocomplete","id","options","getOptionLabel","option","toString","disabled","defaultValue","style","width","onChange","e","value","type","payload","renderInput","params","TextField","label","variant","formControl","minWidth","selectItem","closest","goal","counts","reduce","prev","curr","Math","abs","calculate_chg","diff","toFixed","chg_perc","calculate_chg0","cal_price_chg","calculate_price_oi","ltp_chg","oi_chg","Dropdown","expiryList","setExpiryList","date","spotTokens","setSpotTokens","spotLp","spotLastPrice","strikeVal","strikeNumber","futureTokenString","futureTokens","spotToken","callsTokenString","optionCallTokensString","callsToken","optionCallTokens","putsTokenString","optionPutsTokensString","putsToken","optionPutsTokens","tradingSymbol","useRef","expiries","getSpotToken","instrumentToken","res","tokenData","price","lp","getSpotLp","future","fut","opt","futExpiry","futureList","i","length","arr","join","optExpiry","callTokensList","putsTokensList","optList","strikeValArr","instrumentType","strikePrice","atmStrikePrice","atmStrikeToken","tokenObj","token","sort","b","strikePriceList","optionCallsToken","optionPutsToken","strike_price","reverse","optionCallString","optionPutsString","getOptionFutureToken","getExpiryTableData","rows","dataObj","time","exts","dayjs","format","ltp_chg_close","p","oi","dates","bid","q","ask","atp","ltp","ltp_chg_open","do","open_int","open_int_chg","vol","vt","impl_vol","iv","iv_chg","open","high","dh","low","dl","of_cum_delta","cdv","delta","d","theta","t","gamma","g","vega","v","price_oi","futDates","getCallsData","console","log","pcr","tab_ltp_open","tab_ltp_close","getPutsData","FormControl","InputLabel","Select","target","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","map","expiry","MenuItem","buttonStyle","margin","tableButton","background","backgroundColor","chartButton","activeButton","OptionToggle","setOption","ButtonGroup","Button","onClick","HighlightedCell","restProps","Cell","padding","color","props","column","name","TableComponent","withStyles","theme","tableStriped","borderWidth","borderColor","opacity","borderStyle","textAlign","Table","TablesComp","columnsNames","rowDatas","display","columns","columnOrderCall","setColumnOrderCall","columnOrderPut","setColumnOrderPut","columnName","tableColumnExtensions","hiddenCols","tableCols","optionColsList","Paper","tableComponent","cellComponent","columnExtensions","order","onOrderChange","hiddenColumnNames","defaultColumnWidths","paddingLeft","OptionStrikeCol","title","strike","calls","callRowData","puts","putsRowData","strd_prc","Number","strd_chg_c","strd_chg_o","columnNames","optionColumnNames","OptionChainTable","callsRowData","Grid","container","spacing","item","xs","DisplayHeader","displayHeaderName","marginBottom","src","Logo","alt","marginTop","marginLeft","underline","borderBottom","PaperProps","maxHeight","colNames","ColumnSelect","colName","setColName","multiple","autoWidth","colsHidden","j","input","Input","renderValue","selected","Checkbox","checked","indexOf","ListItemText","primary","ExpiryTableComp","columnOrder","setColumnOrder","expiryColsList","ExpiryTable","rowData","expiryTableData","optionTableMainHeader","OptionChainHeader","align","marginRight","inputProps","ExpiryColumnSelect","root","flexGrow","table","OptionChain","lastUpdateTime","lg","justifyContent","alignItems","instrumentInitialState","futureDates","atmStrike","Date","toLocaleString","instrumentDetailsLoading","channels","callOi","putOi","colsInitialState","rootReducer","combineReducers","action","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e76fee1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n    textField: {\n        [`& fieldset`]: {\n            borderRadius: 25,\n            height: 50,\n        },\n    }\n})\n\nconst SearchBox = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [optionData, setOptionData] = useState([]);\n    const instrument = useSelector((state) => state.expiryInstrument.instrument)\n\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        const getData = async () => {\n            let response = await axios.get('https://stock-api.fnotrader.com/v1/search?name=')\n            if (response.status === 200) {\n                setOptionData(response.data.data.values)\n                setLoading(false);\n                return;\n            }\n        }\n        getData();\n    }, []);\n\n    let menuOptions = [];\n    function createOptions() {\n        optionData.forEach((data) => {\n            let instrument = data.tradingName;\n            let instrumentId = data.underlyingName;\n            menuOptions.push(\n                { 'instrument': instrument, 'id': instrumentId }\n            )\n        })\n        return;\n    }\n    if (optionData !== undefined) {\n        createOptions();\n    }\n\n    \n    const classes = useStyles();\n    return (\n        <div className=\"search_box\">\n            <Autocomplete\n                id=\"instrument-box\"\n                options={menuOptions}\n                getOptionLabel={(option) => option.instrument.toString()}\n                disabled={loading}\n                defaultValue={{instrument: \"BANKNIFTY\", id: \"NIFTY BANK\"}}\n                style={{ width: 300 }}\n                onChange={(e, value) => {\n                    dispatch({type:'SET_INSTRUMENT', payload: (value !== null ? value.instrument : 'BANKNIFTY')})\n                    dispatch({type: 'SET_INSTRUMENT_DETAILS_LOADED', payload: false})\n                }}\n                renderInput={(params) =>\n                    <TextField {...params}\n                        className={classes.textField}\n                        label=\"Search Instrument\"\n                        variant=\"outlined\"\n                        value={instrument}\n                    />}\n            />\n        </div>\n    )\n};\n\nexport default SearchBox;","import React, { useState, useEffect, useRef } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport dayjs from \"dayjs\";\nimport Centrifuge from \"centrifuge\";\n//import Centrifuge from 'centrifuge';\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 200,\n  },\n  selectItem: {\n    borderRadius: 20,\n    height: 50,\n    width: 200,\n  },\n}));\n\n//function to calculate the atm strike\nfunction closest(goal, counts) {\n  var ans = counts.reduce((prev, curr) =>\n    Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev\n  );\n  return ans;\n}\n\n// calculate the change\nfunction calculate_chg(curr, prev) {\n  if (prev === 0) {\n    return curr;\n  }\n  let diff = (curr - prev).toFixed(2);\n  let chg_perc = (((curr - prev) / prev) * 100).toFixed(2);\n  if (diff > 0) {\n    // eslint-disable-next-line\n    let chg = \"+\" + diff + \" (\" + \"+\" + chg_perc + \"%\" + \")\";\n    return chg;\n  } else if (diff < 0) {\n    // eslint-disable-next-line\n    let chg =\n      \"-\" + Math.abs(diff) + \" (\" + \"-\" + Math.abs(chg_perc) + \"%\" + \")\";\n    return chg;\n  }\n}\nfunction calculate_chg0(curr, prev) {\n  if (prev === 0) {\n    return curr.toFixed();\n  }\n  let diff = (curr - prev).toFixed();\n  let chg_perc = (((curr - prev) / prev) * 100).toFixed(2);\n  if (diff > 0) {\n    // eslint-disable-next-line\n    let chg = \"+\" + diff + \" (\" + \"+\" + chg_perc + \"%\" + \")\";\n    return chg;\n  } else if (diff < 0) {\n    // eslint-disable-next-line\n    let chg =\n      \"-\" + Math.abs(diff) + \" (\" + \"-\" + Math.abs(chg_perc) + \"%\" + \")\";\n    return chg;\n  }\n}\n\nfunction cal_price_chg(curr, prev) {\n  if (prev === 0) {\n    return curr;\n  }\n  let diff = (curr - prev).toFixed(2);\n  return diff;\n}\nfunction calculate_price_oi(ltp_chg, oi_chg) {\n  if (ltp_chg >= 0 && oi_chg >= 0) {\n    return \"LB\";\n  } else if (ltp_chg < 0 && oi_chg >= 0) {\n    return \"SB\";\n  } else if (ltp_chg >= 0 && oi_chg < 0) {\n    return \"SC\";\n  } else if (ltp_chg < 0 && oi_chg < 0) {\n    return \"PB\";\n  }\n}\n\nconst Dropdown = () => {\n  const dispatch = useDispatch();\n  const [expiryList, setExpiryList] = useState([]);\n  //const [connected, setConnected] = useState(0);\n  const instrument = useSelector((state) => state.expiryInstrument.instrument);\n  const date = useSelector((state) => state.expiryInstrument.date);\n  const [spotTokens, setSpotTokens] = useState();\n  const spotLp = useSelector((state) => state.expiryInstrument.spotLastPrice);\n  const strikeVal = useSelector((state) => state.expiryInstrument.strikeNumber);\n  const futureTokenString = useSelector(\n    (state) => state.expiryInstrument.futureTokenString\n  );\n  const futureTokens = useSelector(\n    (state) => state.expiryInstrument.futureTokens\n  );\n  const spotToken = useSelector((state) => state.expiryInstrument.spotToken);\n  const callsTokenString = useSelector(\n    (state) => state.expiryInstrument.optionCallTokensString\n  );\n  const callsToken = useSelector(\n    (state) => state.expiryInstrument.optionCallTokens\n  );\n  const putsTokenString = useSelector(\n    (state) => state.expiryInstrument.optionPutsTokensString\n  );\n  const putsToken = useSelector(\n    (state) => state.expiryInstrument.optionPutsTokens\n  );\n  const tradingSymbol = useSelector(\n    (state) => state.expiryInstrument.tradingSymbol\n  );\n  const [expirySubscribed, setExpirySubscribed] = useState(null);\n  const [putsSubscribed, setPutsSubscribed] = useState(null);\n  const channel = useRef(null);\n  //const subscribedChannel = useSelector((state) => state.expiryInstrument.channels)\n  useEffect(() => {\n    const getData = async () => {\n      let response = await axios.get(\n        `https://stock-api.fnotrader.com/v1/get_option_expiry?name=${instrument}`\n      );\n      if (response.status === 200) {\n        let data = response.data.data.expiries;\n        setExpiryList(data);\n        dispatch({ type: \"SET_DATE\", payload: data[0] });\n        return;\n      }\n    };\n    const getSpotToken = async () => {\n      let response = await axios.get(\n        `https://stock-api.fnotrader.com/v1/instruments?name=${instrument}&exchange=nse`\n      );\n      if (response.status === 200) {\n        let data = response.data;\n        let spotToken = data.data[0].instrumentToken;\n        setSpotTokens(spotToken);\n        dispatch({ type: \"SET_SPOT_TOKEN\", payload: spotToken });\n        return;\n      }\n    };\n    getData();\n    getSpotToken();\n  }, [instrument, dispatch]);\n\n  useEffect(() => {\n    const getSpotLp = async () => {\n      let response = await axios.get(\n        \"https://stock-api.fnotrader.com/v1/ticks?tokens=\" + spotTokens\n      );\n      if (response.status === 200) {\n        let res = response.data.data;\n        if (res !== undefined) {\n          let tokenData = res[spotTokens];\n          if (tokenData !== undefined) {\n            let price = tokenData.lp;\n            dispatch({ type: \"SET_SPOT_LP\", payload: price });\n          }\n        }\n      }\n      return;\n    };\n    getSpotLp();\n  }, [spotTokens, dispatch]);\n\n  useEffect(() => {\n    const getOptionFutureToken = async () => {\n      let response = await axios.get(`https://stock-api.fnotrader.com/v1/get_option_chain_instruments?name=${instrument}&expiry=${date}`)\n      if (response.status === 200) {\n        let res = response.data;\n        let future = res.data.fut;\n        let option = res.data.opt;\n        let futExpiry = future.expiries;\n        let tradingSymbol = [];\n        let futureList = [];\n        for (let i = 0; i < futExpiry.length; i++) {\n          let arr = future[futExpiry[i]];\n          futureList.push(arr[0].instrumentToken.toString())\n          tradingSymbol.push(arr[0].tradingSymbol)\n        }\n        let futureTokens = futureList.join(',');\n        let optExpiry = option.expiries;\n        let callTokensList = [];\n        let putsTokensList = [];\n        if (optExpiry !== undefined) {\n          let optList = option[optExpiry];\n          let strikeValArr = [];\n          for (let i = 0; i < optList.length; i++) {\n            if (optList[i].instrumentType === \"CE\") {\n              strikeValArr.push(optList[i].strikePrice)\n            }\n          }\n          let atmStrikePrice = closest(spotLp, strikeValArr);\n          let atmStrikeToken;\n          // calculating atm strike token\n          for (let i = 0; i < optList.length; i++) {\n            if (optList[i].instrumentType === \"CE\" && optList[i].strikePrice === atmStrikePrice) {\n              atmStrikeToken = optList[i].instrumentToken\n            }\n          }\n \n          for (let i = 0; i < optList.length; i++) {\n            if (optList[i].instrumentType === \"CE\" && optList[i].strikePrice < atmStrikePrice) {\n              let tokenObj = {};\n              tokenObj = {\n                token: optList[i].instrumentToken.toString(),\n                diff: Math.abs(atmStrikePrice - optList[i].strikePrice),\n                strikePrice: optList[i].strikePrice\n              }\n              callTokensList.push(tokenObj);\n            }\n            else if (optList[i].instrumentType === \"PE\" && optList[i].strikePrice > atmStrikePrice) {\n              let tokenObj = {};\n              tokenObj = {\n                token: optList[i].instrumentToken.toString(),\n                diff: Math.abs(atmStrikePrice - optList[i].strikePrice),\n                strikePrice: optList[i].strikePrice\n              }\n              putsTokensList.push(tokenObj);\n            }\n          }\n \n          callTokensList.sort(function (a, b) {\n            return a.diff - b.diff;\n          });\n          putsTokensList.sort(function (a, b) {\n            return a.diff - b.diff;\n          });\n          let strikePriceList = [];\n          let optionCallsToken = [];\n          let optionPutsToken = [];\n \n          // create all the option call and puts tokens\n          for (let i = 0; i < strikeVal / 2; i++) {\n            optionCallsToken.push(callTokensList[i]?.token);\n            optionPutsToken.push(callTokensList[i]?.token);\n            strikePriceList.push({ strike_price: callTokensList[i]?.strikePrice });\n          }\n          optionCallsToken.reverse();\n          optionPutsToken.reverse();\n          strikePriceList.reverse();\n          strikePriceList.push({ strike_price: atmStrikePrice });\n          optionCallsToken.push(atmStrikeToken).toString();\n          optionPutsToken.push(atmStrikeToken).toString();\n          for (let i = 0; i < strikeVal / 2; i++) {\n            optionCallsToken.push(putsTokensList[i].token);\n            optionPutsToken.push(putsTokensList[i].token);\n            strikePriceList.push({ strike_price: putsTokensList[i].strikePrice });\n          }\n \n          let optionCallString = optionCallsToken.join(',');\n          let optionPutsString = optionPutsToken.join(',');\n \n \n          dispatch({ type: 'SET_FUTURE_TOKENS', payload: futureList })\n          dispatch({ type: 'SET_FUTURE_TOKENS_STRING', payload: futureTokens })\n          dispatch({ type: 'SET_FUTURE_DATES', payload: futExpiry })\n          dispatch({ type: 'SET_ATM_STRIKE', payload: atmStrikePrice })\n          dispatch({ type: 'SET_ATM_STRIKE_TOKEN', payload: atmStrikeToken })\n          dispatch({ type: 'SET_OPTION_CALL_TOKENS', payload: optionCallsToken })\n          dispatch({ type: 'SET_OPTION_PUT_TOKENS', payload: optionPutsToken })\n          dispatch({ type: 'SET_STRIKE_DATA', payload: strikePriceList })\n          dispatch({ type: 'SET_OPTION_CALL_TOKEN_STRING', payload: optionCallString })\n          dispatch({ type: 'SET_OPTION_PUT_TOKEN_STRING', payload: optionPutsString })\n          dispatch({ type: 'SET_TRADING_SYMBOL', payload: tradingSymbol })\n \n        }\n        return;\n      }\n    }\n    getOptionFutureToken();\n  }, [date, instrument, strikeVal, spotLp, dispatch])\n\n  /*function getPrevExpiryData(token, name) {\n    \n  }*/\n\n  /*useEffect(() => {\n\n    const centrifuge = new Centrifuge('wss://stock-api.fnotrader.com/connection/websocket')\n    centrifuge.on('connect', function (ctx) {\n      console.log('Connected with client ID ' + ctx.client + ' over ' + ctx.transport);\n      //setConnected(1);\n    });\n\n    centrifuge.on('disconnect', function (ctx) {\n      console.log('Disconnected: ' + ctx.reason + (ctx.reconnect ? \", will try to reconnect\" : \", won't try to reconnect\"));\n      //setConnected(0);\n    });\n    centrifuge.connect();\n    \n    function getData() {\n      const channels = [];\n      channels.push(spotToken.toString());\n      for(let i = 0; i < futureTokens.length; i++) {\n        channels.push(futureTokens[i])\n      }\n      let data = [];\n      let subs = [];\n      let unsubscribed = false;\n      centrifuge.startBatching();\n      for(let i in channels) {\n\n        if(!unsubscribed) {\n          for(let i = 0; i < subscribedChannel.length; i++) {\n            let sub = subscribedChannel[i];\n            handleUnsubscribe(sub)\n          }\n            unsubscribed = true;\n        }\n        let ch = channels[i];\n        console.log(ch, \"Channels name\")\n        var sub = centrifuge.subscribe(ch, handleMessage)\n                  .on(\"unsubscribe\", handleUnsubscribe)\n                subs.push(sub);\n                function handleMessage(message) {\n                  if(true) {\n                    //console.log(\"Yes\")\n                    //console.log(message.data.token)\n                    //console.log(\"Message\", message.data.token, message.data)\n                  }\n                }\n                function handleUnsubscribe(sub) {\n                  console.log(\"Unsubscribed\", sub.channel)\n                }\n      } \n      dispatch({type: 'SET_CHANNELS', payload: subs})\n      centrifuge.stopBatching(true);\n    }\n    getData();\n\n  }, [futureTokens, spotToken])*/\n\n  const getExpiryTableData = async () => {\n    let response = await axios.get(\n      \"https://stock-api.fnotrader.com/v1/ticks?tokens=\" +\n        spotToken +\n        \",\" +\n        futureTokenString\n    );\n    if (response.status === 200) {\n      let res = response.data.data;\n      if (res !== null) {\n        let rows = [];\n        let dataObj = {};\n        let tokenData = res[spotToken];\n        if (tokenData !== undefined) {\n          let time = tokenData.exts;\n          dispatch({\n            type: \"SET_LAST_UPDATE_TIME\",\n            payload: dayjs(time).format(\"YYYY-MM-DD HH:mm:ss\"),\n          });\n          let ltp_chg_close = cal_price_chg(tokenData.lp, tokenData.prev.p);\n          let oi_chg = cal_price_chg(tokenData.oi, tokenData.prev.oi)\n          dataObj = {\n            dates: \"Spot\",\n            bid:\n              tokenData.bid.p.toString() + \" x \" + tokenData.bid.q.toString(),\n            ask:\n              tokenData.ask.p.toString() + \" x \" + tokenData.ask.q.toString(),\n            atp: tokenData.atp.toFixed(2),\n            ltp: tokenData.lp.toFixed(2),\n            ltp_chg_close: calculate_chg(tokenData.lp, tokenData.prev.p),\n            ltp_chg_open: calculate_chg(tokenData.do, tokenData.prev.p),\n            open_int: tokenData.oi,\n            open_int_chg: calculate_chg0(tokenData.oi, tokenData.prev.oi),\n            vol: tokenData.vt,\n            impl_vol: tokenData.iv.toFixed(2),\n            iv_chg: calculate_chg(tokenData.iv, tokenData.prev.iv),\n            open: tokenData.do.toFixed(2),\n            high: tokenData.dh.toFixed(2),\n            low: tokenData.dl.toFixed(2),\n            of_cum_delta: tokenData.cdv.toFixed(),\n            delta: tokenData.d.toFixed(2),\n            theta: tokenData.t.toFixed(2),\n            gamma: tokenData.g.toFixed(2),\n            vega: tokenData.v.toFixed(2),\n            price_oi: calculate_price_oi(ltp_chg_close, oi_chg),\n          };\n        }\n        rows.push(dataObj);\n        for (let i = 0; i < futureTokens.length; i++) {\n          let tokenData = res[futureTokens[i]];\n          if (tokenData !== undefined) {\n            let futDates = tradingSymbol[i];\n            let ltp_chg_close = cal_price_chg(tokenData.lp, tokenData.prev.p);\n            let oi_chg = cal_price_chg(tokenData.oi, tokenData.prev.oi);\n            dataObj = {\n              dates: futDates,\n              bid:\n                tokenData.bid.p.toString() + \" x \" + tokenData.bid.q.toString(),\n              ask:\n                tokenData.ask.p.toString() + \" x \" + tokenData.ask.q.toString(),\n              atp: tokenData.atp.toFixed(2),\n              ltp: tokenData.lp.toFixed(2),\n              ltp_chg_close: calculate_chg(tokenData.lp, tokenData.prev.p),\n              ltp_chg_open: calculate_chg(tokenData.do, tokenData.prev.p),\n              open_int: tokenData.oi,\n              open_int_chg: calculate_chg0(tokenData.oi, tokenData.prev.oi),\n              vol: tokenData.vt,\n              impl_vol: tokenData.iv.toFixed(2),\n              iv_chg: calculate_chg(tokenData.iv, tokenData.prev.iv),\n              open: tokenData.do.toFixed(2),\n              high: tokenData.dh.toFixed(2),\n              low: tokenData.dl.toFixed(2),\n              of_cum_delta: tokenData.cdv.toFixed(),\n              delta: tokenData.d.toFixed(2),\n              theta: tokenData.t.toFixed(2),\n              gamma: tokenData.g.toFixed(2),\n              vega: tokenData.v.toFixed(2),\n              price_oi: calculate_price_oi(ltp_chg_close, oi_chg),\n            };\n            rows.push(dataObj);\n          }\n        }\n        dispatch({ type: \"SET_EXPIRY_DATA\", payload: rows });\n      }\n    }\n    return;\n  };\n\n  useEffect(() => {\n    /*\n    async function execute(){\n      await getExpiryTableData();\n      if(expirySubscribed){\n        for(var i=0;i<expirySubscribed.length;i++){\n          await expirySubscribed[i]?.unsubscribe();\n        }\n      }\n      setExpirySubscribed([]);\n      var b=[];\n      if(spotToken?.toString()){\n        var m=channel?.current?.subscribe(spotToken.toString(),(y)=>console.log(\"Expiry spot\"));\n        b.push(m);\n      }\n      if(futureTokens){\n        for(var j=0;j<futureTokens.length;j++){\n          var k=channel?.current?.subscribe(futureTokens[j],(y)=>console.log(\"Expiry future\"));\n          b.push(k);\n        }\n      }\n      setExpirySubscribed(b);\n    }\n    execute();\n    */\n    getExpiryTableData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [futureTokenString, futureTokens, spotToken]);\n\n  const getCallsData = async () => {\n    let response = await axios.get(\n      \"https://stock-api.fnotrader.com/v1/ticks?tokens=\" + callsTokenString\n    );\n    if (response.status === 200) {\n      let res = response.data.data;\n      console.log(res);\n      if (res !== undefined) {\n        let rows = [];\n        for (let i = 0; i < callsToken.length; i++) {\n          let tokenData = res[callsToken[i]];\n          if (tokenData !== undefined) {\n            let ltp_chg_close = cal_price_chg(tokenData.lp, tokenData.prev.p);\n            let oi_chg = cal_price_chg(tokenData.oi, tokenData.prev.oi);\n            let dataObj = {\n              bid:\n                tokenData.bid.p.toString() + \" x \" + tokenData.bid.q.toString(),\n              ask:\n                tokenData.ask.p.toString() + \" x \" + tokenData.ask.q.toString(),\n              atp: tokenData.atp.toFixed(2),\n              ltp: tokenData.lp.toFixed(2),\n              ltp_chg_close: calculate_chg(tokenData.lp, tokenData.prev.p),\n              ltp_chg_open: calculate_chg(tokenData.do, tokenData.prev.p),\n              open_int: tokenData.oi,\n              open_int_chg: calculate_chg0(tokenData.oi, tokenData.prev.oi),\n              vol: tokenData.vt,\n              impl_vol: tokenData.iv.toFixed(2),\n              iv_chg: calculate_chg(tokenData.iv, tokenData.prev.iv),\n              open: tokenData.do.toFixed(2),\n              high: tokenData.dh.toFixed(2),\n              low: tokenData.dl.toFixed(2),\n              of_cum_delta: tokenData.cdv.toFixed(),\n              delta: tokenData.d.toFixed(2),\n              theta: tokenData.t.toFixed(2),\n              gamma: tokenData.g.toFixed(2),\n              vega: tokenData.v.toFixed(2),\n              price_oi: calculate_price_oi(ltp_chg_close, oi_chg),\n              pcr: 1, //discuss\n              tab_ltp_open:tokenData.lp-tokenData.prev.p,\n              tab_ltp_close:tokenData.do-tokenData.prev.p,\n            };\n            rows.push(dataObj);\n          }\n        }\n        dispatch({ type: \"SET_CALL_DATA\", payload: rows });\n      }\n    }\n  };\n\n  useEffect(() => {\n    getCallsData(); // eslint-disable-next-line\n  }, [callsTokenString, strikeVal, dispatch]);\n\n  const getPutsData = async () => {\n    let response = await axios.get(\n      \"https://stock-api.fnotrader.com/v1/ticks?tokens=\" + putsTokenString\n    );\n    if (response.status === 200) {\n      let res = response.data.data;\n      console.log(\"Hi\");\n      console.log(res);\n      if (res !== null) {\n        let rows = [];\n        for (let i = 0; i < putsToken.length; i++) {\n          let tokenData = res[putsToken[i]];\n          if (tokenData !== undefined) {\n            let ltp_chg_close = cal_price_chg(tokenData.lp, tokenData.prev.p);\n            let oi_chg = cal_price_chg(tokenData.oi, tokenData.prev.oi);\n            let dataObj = {\n              bid:\n                tokenData.bid.p.toString() + \" x \" + tokenData.bid.q.toString(),\n              ask:\n                tokenData.ask.p.toString() + \" x \" + tokenData.ask.q.toString(),\n              atp: tokenData.atp.toFixed(2),\n              ltp: tokenData.lp.toFixed(2),\n              ltp_chg_close: calculate_chg(tokenData.lp, tokenData.prev.p),\n              ltp_chg_open: calculate_chg(tokenData.do, tokenData.prev.p),\n              open_int: tokenData.oi,\n              open_int_chg: calculate_chg0(tokenData.oi, tokenData.prev.oi),\n              vol: tokenData.vt,\n              impl_vol: tokenData.iv.toFixed(2),\n              iv_chg: calculate_chg(tokenData.iv, tokenData.prev.iv),\n              open: tokenData.do.toFixed(2),\n              high: tokenData.dh.toFixed(2),\n              low: tokenData.dl.toFixed(2),\n              of_cum_delta: tokenData.cdv.toFixed(),\n              delta: tokenData.d.toFixed(2),\n              theta: tokenData.t.toFixed(2),\n              gamma: tokenData.g.toFixed(2),\n              vega: tokenData.v.toFixed(2),\n              price_oi: calculate_price_oi(ltp_chg_close, oi_chg),\n              pcr: 1, //discuss\n              tab_ltp_open:tokenData.lp-tokenData.prev.p,\n              tab_ltp_close:tokenData.do-tokenData.prev.p,\n            };\n            rows.push(dataObj);\n          }\n        }\n        dispatch({ type: \"SET_PUTS_DATA\", payload: rows });\n      }\n    }\n  };\n\n  useEffect(() => {\n    getPutsData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [putsTokenString, strikeVal, dispatch]);\n\n  useEffect(() => {\n    console.log(\"Hi\");\n    async function execute() {\n      const centrifuge = new Centrifuge(\n        \"wss://stock-api.fnotrader.com/connection/websocket\"\n      );\n      centrifuge.on(\"connect\", function (ctx) {\n        console.log(\n          \"Connected with client ID \" + ctx.client + \" over \" + ctx.transport\n        );\n        //setConnected(1);\n      });\n\n      centrifuge.on(\"disconnect\", function (ctx) {\n        console.log(\n          \"Disconnected: \" +\n            ctx.reason +\n            (ctx.reconnect\n              ? \", will try to reconnect\"\n              : \", won't try to reconnect\")\n        );\n        //setConnected(0);\n      });\n      centrifuge.connect();\n      channel.current = centrifuge;\n      const tokens = [\n        \"260105\",\n        \"13208322\",\n        \"18257666\",\n        \"13208322\",\n        \"13720322\",\n        \"18257666\",\n        \"8960770\",\n        \"8960514\",\n        \"8961282\",\n        \"8961026\",\n        \"8961538\",\n        \"8961794\",\n        \"8963842\",\n        \"8963586\",\n        \"8965634\",\n        \"8965378\",\n        \"8971778\",\n        \"8972034\",\n        \"11880706\",\n        \"11878402\",\n        \"11881218\",\n        \"11880962\",\n        \"10366722\",\n        \"10366978\",\n        \"10367234\",\n        \"10367490\",\n        \"10368002\",\n        \"10367746\",\n        \"10368258\",\n        \"10368514\",\n        \"10369026\",\n        \"10368770\",\n        \"10369282\",\n        \"10369538\",\n        \"10372610\",\n        \"10369794\",\n        \"10376962\",\n        \"10377218\",\n        \"10377474\",\n        \"10377986\",\n        \"10379778\",\n        \"10380802\",\n        \"10381314\",\n        \"10381058\",\n        \"10381570\",\n        \"10381826\",\n        \"10382082\",\n        \"10382338\",\n        \"10382850\",\n        \"10382594\",\n        \"10383106\",\n        \"10383362\",\n        \"10384130\",\n      ];\n      var subscriptions = [];\n      for (let i = 0; i < tokens.length; i++) {\n        subscriptions[i] = centrifuge.subscribe(tokens[i],(m)=>console.log(m));\n      }\n    }\n  }, []);\n  const classes = useStyles();\n  return (\n    <div className=\"drop-down\">\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel>Expiry Date</InputLabel>\n        <Select\n          className={classes.selectItem}\n          label=\"Expiry Date\"\n          value={date}\n          onChange={(e) => {\n            dispatch({ type: \"SET_DATE\", payload: e.target.value });\n          }}\n          MenuProps={{\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            },\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\",\n            },\n            getContentAnchorEl: null,\n          }}\n        >\n          {expiryList.map((expiry) => {\n            return <MenuItem value={expiry}>{expiry}</MenuItem>;\n          })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Dropdown;\n\n//wss://stock-api.fnotrader.com/connection/websocket\n/*\nasync function execute(){\n      await getPutsData();\n      if(putsSubscribed){\n        for(var i=0;i<putsSubscribed.length;i++){\n          await putsSubscribed[i]?.unsubscribe();\n        }\n      }\n      setPutsSubscribed([]);\n      var b=[];\n      if(putsToken){\n        for(var j=0;j<putsToken.length;i++){\n          var k=channel?.current?.subscribe(putsToken[j],(y)=>console.log(\"Puts\"));\n          b.push(k);        \n        }\n      }\n      setPutsSubscribed(b);\n    }\n    execute();\n */\n\n/*\n  async function execute(){\n      await getExpiryTableData();\n      if(expirySubscribed){\n        for(var i=0;i<expirySubscribed.length;i++){\n          await expirySubscribed[i]?.unsubscribe();\n        }\n      }\n      setExpirySubscribed([]);\n      var b=[];\n      if(spotToken?.toString()){\n        var m=channel?.current?.subscribe(spotToken.toString(),(y)=>console.log(\"Expiry spot\"));\n        b.push(m);\n      }\n      if(futureTokens){\n        for(var j=0;j<futureTokens.length;j++){\n          var k=channel?.current?.subscribe(futureTokens[i],(y)=>console.log(\"Expiry future\"));\n          b.push(k);\n        }\n      }\n      setExpirySubscribed(b);\n    }\n    execute();\n   */\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    buttonStyle: {\n        width: 200,\n        height: 40,\n        borderRadius: 5,\n        margin: 10,\n    },\n    tableButton: {\n        width: 100,\n        background: '#ffffff',\n        '&:hover': {\n            backgroundColor: '#ffffff',\n        },\n        '&:active': {\n            backgroundColor: '#39A2DB',\n        },\n    },\n    chartButton: {\n        width: 100,\n        background: '#39A2DB',\n        '&:hover': {\n            background: '#39A2DB',\n        },\n        '&:active': {\n            backgroundColor: '#ffffff',\n        },\n    },\n    activeButton: {\n        background: '#39A2DB',\n    }\n})\n\nconst OptionToggle = () => {\n\n    const classes = useStyles();\n    const [option, setOption] = useState('table');\n\n    const handleTableButtonClick = () => {\n        setOption('table')\n        console.log(option)\n    }\n    const handleChartButtonClick = () => {\n        setOption('chart')\n    }\n\n    return (\n        <div className=\"option-toggle\">\n            <ButtonGroup className={classes.buttonStyle} variant=\"contained\" aria-label=\"contained primary button group\">\n                <Button className={classes.tableButton} onClick={handleTableButtonClick}>Table</Button>\n                <Button className={classes.chartButton} onClick={handleChartButtonClick}>Chart</Button>\n            </ButtonGroup>\n        </div>\n    )\n}\n\nexport default OptionToggle;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  Grid,\n  DragDropProvider,\n  Table,\n  TableHeaderRow,\n  TableColumnReordering,\n  TableColumnVisibility,\n  TableColumnResizing\n} from '@devexpress/dx-react-grid-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  tableStriped: {\n    '& tbody td': {\n      padding: \"0px\",\n      borderWidth: 1,\n      borderColor: \"#e0e0e0\",\n      opacity: 1,\n      borderStyle: 'solid',\n      textAlign: 'center'\n    },\n    '& thead tr': {\n      backgroundColor: '#39A2DB',\n      textAlign: 'center'\n    }\n  },\n});\n\nconst HighlightedCell = ({ value, style, ...restProps }) => (\n  <Table.Cell\n    {...restProps}\n    style={{\n      backgroundColor: value === 'Deepak' ? 'red' : undefined,\n      padding: 0,\n      ...style,\n    }}\n  >\n    <span\n      style={{\n        color: value < 5000 ? 'white' : undefined,\n      }}\n    >\n      {value}\n    </span>\n  </Table.Cell>\n);\n\nconst Cell = (props) => {\n  const { column } = props;\n  if (column.name === 'name') {\n    return <HighlightedCell {...props} />;\n  }\n  return <Table.Cell {...props} />;\n};\n\nconst TableComponentBase = ({ classes, ...restProps }) => (\n  <Table.Table\n    {...restProps}\n    className={classes.tableStriped}\n  />\n);\n\nexport const TableComponent = withStyles(styles, { name: 'TableComponent' })(TableComponentBase);\n\nconst TablesComp = ({ columnsNames, rowDatas, display, name }) => {\n  const [columns] = useState(columnsNames);\n  const [columnOrderCall, setColumnOrderCall] = useState(\n    [\n      'pcr', 'price_oi', 'vega', 'gamma', 'theta', 'delta', 'of_cum_delta', 'low', 'high', 'open',\n      'iv_chg', 'impl_vol', 'vol', 'open_int', 'open_int_chg', 'ltp_chg_open', 'ltp_chg_close',\n      'ltp', 'atp', 'ask', 'bid', 'dates'\n    ]\n  );\n  const [columnOrderPut, setColumnOrderPut] = useState(\n    [\n      'bid', 'ask', 'atp', 'ltp', 'ltp_chg_close', 'ltp_chg_open', 'open_int_chg', 'open_int', 'vol',\n      'impl_vol', 'iv_chg', 'open', 'high', 'low', 'of_cum_delta', 'delta', 'theta', 'gamma',\n      'vega', 'price_oi', 'pcr'\n    ]\n  );\n  const [tableColumnExtensions] = useState([\n    { columnName: 'dates', width: 220 },\n    { columnName: 'bid', width: 150 },\n    { columnName: 'ask', width: 150 },\n    { columnName: 'atp', width: 100 },\n    { columnName: 'ltp', width: 100 },\n    { columnName: 'ltp_chg_close', width: 160 },\n    { columnName: 'ltp_chg_open', width: 160 },\n    { columnName: 'open_int', width: 100 },\n    { columnName: 'open_int_chg', width: 160 },\n    { columnName: 'vol', width: 100 },\n    { columnName: 'impl_vol', width: 100 },\n    { columnName: 'iv_chg', width: 100 },\n    { columnName: 'open', width: 100 },\n    { columnName: 'high', width: 100 },\n    { columnName: 'low', width: 100 },\n    { columnName: 'of_cum_delta', width: 150 },\n    { columnName: 'delta', width: 100 },\n    { columnName: 'theta', width: 100 },\n    { columnName: 'gamma', width: 100 },\n    { columnName: 'vega', width: 100 },\n    { columnName: 'price_oi', width: 100 },\n    { columnName: 'pcr', width: 100 },\n\n  ]);\n  const hiddenCols = useSelector((state) => state.tableCols.optionColsList)\n\n  return (\n    <Paper>\n      <Grid\n        rows={rowDatas}\n        columns={columns}\n      >\n        <DragDropProvider />\n        <Table\n          tableComponent={TableComponent}\n          cellComponent={Cell}\n          columnExtensions={tableColumnExtensions}\n        />\n        <TableColumnReordering\n          order={name === \"call\" ? columnOrderCall : columnOrderPut}\n          onOrderChange={name === \"call\" ? setColumnOrderCall : setColumnOrderPut}\n        />\n        <TableColumnVisibility\n          hiddenColumnNames={hiddenCols}\n        />\n        <TableColumnResizing defaultColumnWidths={tableColumnExtensions} />\n        <TableHeaderRow />\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default TablesComp;\n","import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\n\nconst styles = (theme) => ({\n  tableStriped: {\n    \"& tbody td\": {\n      padding: \"0px\",\n      borderWidth: 1,\n      borderColor: \"#e0e0e0\",\n      opacity: 1,\n      borderStyle: \"solid\",\n      paddingLeft: 5,\n    },\n    \"& thead tr\": {\n      backgroundColor: \"#39A2DB\",\n    },\n  },\n});\n\nconst HighlightedCell = ({ value, style, ...restProps }) => (\n  <Table.Cell\n    {...restProps}\n    style={{\n      backgroundColor: value === \"Deepak\" ? \"red\" : undefined,\n      padding: 0,\n      ...style,\n    }}\n  >\n    <span\n      style={{\n        color: value < 5000 ? \"white\" : undefined,\n      }}\n    >\n      {value}\n    </span>\n  </Table.Cell>\n);\n\nconst Cell = (props) => {\n  const { column } = props;\n  if (column.name === \"name\") {\n    return <HighlightedCell {...props} />;\n  }\n  return <Table.Cell {...props} />;\n};\n\nconst TableComponentBase = ({ classes, ...restProps }) => (\n  <Table.Table {...restProps} className={classes.tableStriped} />\n);\n\nexport const TableComponent = withStyles(styles, { name: \"TableComponent\" })(\n  TableComponentBase\n);\n\nconst OptionStrikeCol = (props) => {\n  const [columns] = useState([\n    { name: \"strike_price\", title: \"Strike\" },\n    { name: \"pcr\", title: \"PCR\" },\n    { name: \"strd_prc\", title: \"Straddle Price\" },\n    { name: \"strd_chg_c\", title: \"Straddle Chg (C)\" },\n    { name: \"strd_chg_o\", title: \"Straddle Chg (O)\" },\n  ]);\n  const strike = useSelector((state) => {\n    var strike = state.expiryInstrument.strike;\n    var calls = state.expiryInstrument.callRowData;\n    var puts = state.expiryInstrument.putsRowData;\n    console.log(puts[0]);\n    var rows = [];\n    for (var i = 0; i < calls.length; i++) {\n      var a = {\n        ...strike[i],\n        pcr: puts[i]?.open_int / calls[i]?.open_int,\n        strd_prc: Number(calls[i]?.ltp) + Number(puts[i]?.ltp),\n        strd_chg_c: (puts[i]?.tab_ltp_open+calls[i].tab_ltp_open).toFixed(2),\n        strd_chg_o: (puts[i]?.tab_ltp_close+calls[i].tab_ltp_close).toFixed(2),\n      };\n      rows.push({ ...a });\n    }\n    return rows;\n  });\n\n  return (\n    <Paper>\n      <Grid rows={strike} columns={columns}>\n        <Table tableComponent={TableComponent} cellComponent={Cell} />\n        <TableHeaderRow />\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default OptionStrikeCol;\n","export const columnNames = [\n    {name: 'dates', title: ' '},\n    {name: 'bid', title: 'Bid'},\n    {name: 'ask', title: 'Ask'},\n    {name: 'atp', title: 'ATP (VWAP)'},\n    {name: 'ltp', title: 'LTP'},\n    {name: 'ltp_chg_close', title: 'LTP chg (Close)'},\n    {name: 'ltp_chg_open', title: 'LTP chg (Open)'},\n    {name: 'open_int', title: 'Open Int (OI)'},\n    {name: 'open_int_chg', title: 'OI Chg'},\n    {name: 'vol', title: 'Volume'},\n    {name: 'impl_vol', title: 'Impl Vol (IV)'},\n    {name: 'iv_chg', title: 'IV Chg'},\n    {name: 'open', title: 'Open'},\n    {name: 'high', title: 'High'},\n    {name: 'low', title: 'Low'},\n    {name: 'of_cum_delta', title: 'OF-CumDelta'},\n    {name: 'delta', title: 'Delta'},\n    {name: 'theta', title: 'Theta'},\n    {name: 'gamma', title: 'Gamma'},\n    {name: 'vega', title: 'Vega'},\n    {name: 'price_oi', title: 'Price-OI'},\n]\n\nexport const optionColumnNames = [\n    {name: 'bid', title: 'Bid'},\n    {name: 'ask', title: 'Ask'},\n    {name: 'atp', title: 'ATP (VWAP)'},\n    {name: 'ltp', title: 'LTP'},\n    {name: 'ltp_chg_close', title: 'LTP chg (Close)'},\n    {name: 'ltp_chg_open', title: 'LTP chg (Open)'},\n    {name: 'open_int', title: 'Open Int (OI)'},\n    {name: 'open_int_chg', title: 'OI Chg'},\n    {name: 'vol', title: 'Volume'},\n    {name: 'impl_vol', title: 'Impl Vol (IV)'},\n    {name: 'iv_chg', title: 'IV Chg'},\n    {name: 'open', title: 'Open'},\n    {name: 'high', title: 'High'},\n    {name: 'low', title: 'Low'},\n    {name: 'of_cum_delta', title: 'OF-CumDelta'},\n    {name: 'delta', title: 'Delta'},\n    {name: 'theta', title: 'Theta'},\n    {name: 'gamma', title: 'Gamma'},\n    {name: 'vega', title: 'Vega'},\n    {name: 'price_oi', title: 'Price-OI'},\n    {name: 'pcr', title: 'PCR'},\n]\n\nexport const strikeColumnNames=[\n    {name: 'pcr', title: 'PCR'},\n    {name:'straddle_price',title:'Straddle Price'},\n    {name:'straddle_chg',title:'Straddle Chg (C)'},\n    {name:'straddle_chg_o',title:'Straddle Chg (O)'},\n]\n","import React from \"react\";\nimport TablesComp from \"../../components/TablesComp\";\nimport OptionStrikeCol from \"../../components/OptionStrikeCol\";\nimport { optionColumnNames, strikeColumnNames } from \"./tableData\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useSelector } from \"react-redux\";\n//pcr=puts.oi/calls.oi\n\nconst OptionChainTable = () => {\n  const displayColSelect = false;\n  const callsRowData = useSelector(\n    (state) => state.expiryInstrument.callRowData\n  );\n  const putsRowData = useSelector(\n    (state) => state.expiryInstrument.putsRowData\n  );\n\n  return (\n    <Grid container spacing={0}>\n      <Grid item xs={5}>\n        <TablesComp\n          columnsNames={optionColumnNames}\n          rowDatas={callsRowData}\n          display={displayColSelect}\n          name=\"call\"\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <OptionStrikeCol calls={callsRowData} puts={putsRowData}/>\n      </Grid>\n      <Grid item xs={4}>\n        <TablesComp\n          columnsNames={optionColumnNames}\n          rowDatas={putsRowData}\n          display={displayColSelect}\n          name=\"put\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default OptionChainTable;\n","export default __webpack_public_path__ + \"static/media/logo.f4436ee6.png\";","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Logo from '../assets/logo.png';\nimport Grid from '@material-ui/core/Grid';\n\nconst DisplayHeader = ({ displayHeaderName }) => {\n    return (\n        <Paper style={{ marginBottom: 30 }}>\n            <Grid container>\n                <Grid item xs={4}>\n                    <img src={Logo} style={{ width: 100, height: 50, margin: 20 }} alt=\"Option Trader Table\" />\n                </Grid>\n                <Grid item xs={4}>\n                    <h3 style={{ textAlign: \"center\", marginTop: 40 }}>{displayHeaderName}</h3>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\nexport default DisplayHeader;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { columnNames } from '../pages/optionChain/tableData';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles({\n    buttonStyle: {\n        width: 200,\n        height: 40,\n        borderRadius: 20,\n        margin: 10,\n        background: \"#39A2DB\",\n        marginLeft: 10,\n    },\n    underline: {\n        '&:before': {\n            borderBottom: \"0px\",\n        },\n        '&:after': {\n            borderBottom: \"0px\",\n        },\n    },\n})\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 16.6 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nconst colNames = [\n    'Bid',\n    'Ask',\n    'ATP (VWAP)',\n    'LTP',\n    'LTP chg (Close)',\n    'LTP chg (Open)',\n    'Open Int (OI)',\n    'Volume',\n    'Impl Vol (IV)',\n    'IV Chg',\n    'Open',\n    'High',\n    'Low',\n    'OF-CumDelta',\n    'Delta',\n    'Theta',\n    'Gamma',\n    'Vega',\n    'Price-OI',\n    'PCR',\n];\n\n\nconst ColumnSelect = () => {\n\n    const classes = useStyles();\n    const [colName, setColName] = useState([]);\n    const dispatch = useDispatch();\n\n\n    const handleChange = (e) => {\n        setColName(e.target.value)\n        let colsHidden = []\n        for (let i = 0; i < columnNames.length; i++) {\n            for (let j = 0; j < e.target.value.length; j++) {\n                if (e.target.value[j] === columnNames[i].title) {\n                    colsHidden.push(columnNames[i].name)\n                }\n            }\n        }\n        dispatch({ type: 'SET_OPTION_COLS', payload: colsHidden })\n    }\n\n    return (\n        <>\n            <Grid container spacing={0}>\n                <Grid item xs={2} style={{ marginLeft: 30 }}>\n                    <Button className={classes.buttonStyle}>\n                        Settings\n                            <FormControl >\n                            <Select\n                                id=\"column-chooser-checkbox\"\n                                variant=\"filled\"\n                                multiple\n                                autoWidth={true}\n                                value={colName}\n                                onChange={handleChange}\n                                input={<Input className={classes.underline} />}\n                                renderValue={(selected) => ''}\n                                MenuProps={MenuProps}\n                            >\n                                {colNames.map((name) => (\n                                    <MenuItem key={name} value={name}>\n                                        <Checkbox checked={colName.indexOf(name) > -1} />\n                                        <ListItemText primary={name} />\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default ColumnSelect;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Paper from '@material-ui/core/Paper';\nimport {\n    Grid,\n    DragDropProvider,\n    Table,\n    TableHeaderRow,\n    TableColumnReordering,\n    TableColumnVisibility,\n    TableColumnResizing\n} from '@devexpress/dx-react-grid-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport ColumnSelect from './ColumnSelect';\n\n\nconst styles = (theme) => ({\n    tableStriped: {\n        '& tbody td': {\n            padding: \"0px\",\n            borderWidth: 1,\n            borderColor: \"#e0e0e0\",\n            opacity: 1,\n            borderStyle: 'solid',\n            textAlign:'center'\n        },\n        '& thead tr': {\n            backgroundColor: '#39A2DB',\n        }\n    },\n});\n\nconst HighlightedCell = ({ value, style, ...restProps }) => (\n    <Table.Cell\n        {...restProps}\n        style={{\n            backgroundColor: value === 'Deepak' ? 'red' : undefined,\n            padding: 0,\n            ...style,\n        }}\n    >\n        <span\n            style={{\n                color: value < 5000 ? 'white' : undefined,\n            }}\n        >\n            {value}\n        </span>\n    </Table.Cell>\n);\n\nconst Cell = (props) => {\n    const { column } = props;\n    if (column.name === 'name') {\n        return <HighlightedCell {...props} />;\n    }\n    return <Table.Cell {...props} />;\n};\n\nconst TableComponentBase = ({ classes, ...restProps }) => (\n    <Table.Table\n        {...restProps}\n        className={classes.tableStriped}\n    />\n);\n\nexport const TableComponent = withStyles(styles, { name: 'TableComponent' })(TableComponentBase);\n\nconst ExpiryTableComp = ({ columnsNames, rowDatas, display }) => {\n    const [columns] = useState(columnsNames);\n    const [columnOrder, setColumnOrder] = useState(\n        [\n            'dates', 'bid', 'ask', 'atp', 'ltp', 'ltp_chg_close', 'ltp_chg_open', 'open_int', 'open_int_chg', 'vol',\n            'impl_vol', 'iv_chg', 'open', 'high', 'low', 'of_cum_delta', 'delta', 'theta', 'gamma',\n            'vega', 'price_oi',\n        ]\n    );\n    const [tableColumnExtensions] = useState([\n        { columnName: 'dates', width: 220 },\n        { columnName: 'bid', width: 150 },\n        { columnName: 'ask', width: 150 },\n        { columnName: 'atp', width: 100 },\n        { columnName: 'ltp', width: 100 },\n        { columnName: 'ltp_chg_close', width: 160 },\n        { columnName: 'ltp_chg_open', width: 160 },\n        { columnName: 'open_int', width: 100 },\n        { columnName: 'open_int_chg', width: 160 },\n        { columnName: 'vol', width: 100 },\n        { columnName: 'impl_vol', width: 100 },\n        { columnName: 'iv_chg', width: 100 },\n        { columnName: 'open', width: 100 },\n        { columnName: 'high', width: 100 },\n        { columnName: 'low', width: 100 },\n        { columnName: 'of_cum_delta', width: 150 },\n        { columnName: 'delta', width: 100 },\n        { columnName: 'theta', width: 100 },\n        { columnName: 'gamma', width: 100 },\n        { columnName: 'vega', width: 100 },\n        { columnName: 'price_oi', width: 100 },\n      ]);\n    const hiddenCols = useSelector((state) => state.tableCols.expiryColsList)\n\n    return (\n        <Paper>\n            {display && <ColumnSelect />}\n            <Grid\n                rows={rowDatas}\n                columns={columns}\n            >\n                <DragDropProvider />\n                <Table\n                    tableComponent={TableComponent}\n                    cellComponent={Cell}\n                    columnExtensions={tableColumnExtensions}\n                />\n                <TableColumnReordering\n                    order={columnOrder}\n                    onOrderChange={setColumnOrder}\n                />\n                <TableColumnVisibility\n                    hiddenColumnNames={hiddenCols}\n                />\n                <TableColumnResizing defaultColumnWidths={tableColumnExtensions} />\n                <TableHeaderRow />\n            </Grid>\n        </Paper>\n    );\n};\n\nexport default ExpiryTableComp;\n","import React from 'react';\nimport ExpiryTableComp from '../../components/ExpiryTableComp';\nimport { columnNames } from './tableData';\nimport { useSelector } from 'react-redux';\n\nconst ExpiryTable = () => {\n\n    const rowData = useSelector((state) => state.expiryInstrument.expiryTableData)\n\n    return (\n        <>\n            <ExpiryTableComp\n                columnsNames={columnNames}\n                rowDatas={rowData !== undefined ? rowData : []}\n                display={false}\n            />\n        </>\n\n    );\n};\n\nexport default ExpiryTable;","import React from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper';\nimport TypoGraphy from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { InputAdornment } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst useStyles = makeStyles({\n  input: {\n    padding: 0,\n  },\n  optionTableMainHeader: {\n    background: \"#39A2DB\",\n  }\n\n})\n\nconst OptionChainHeader = () => {\n\n  const classes = useStyles();\n  const strikeVal = useSelector((state) => state.expiryInstrument.strikeNumber)\n  const dispatch = useDispatch();\n\n  return (\n    <Paper>\n      <Grid container spacing={0}>\n        <Grid item xs={6} className={classes.optionTableMainHeader} >\n          <TypoGraphy variant=\"body1\" align=\"center\" style={{ margin: \"5px\" }}>\n            Calls\n          </TypoGraphy>\n        </Grid>\n        <Grid item xs={1} className={classes.optionTableMainHeader} >\n          <TextField margin=\"dense\" style={{ marginLeft: \"40px\", marginRight: \"40px\", background: \"#ffffff\" }}\n            id=\"strike-field\"\n            label=\"\"\n            defaultValue=\"10\"\n            value={strikeVal}\n            onChange={(e) => {\n              dispatch({type:'SET_STRIKE_NUMBER', payload: e.target.value})\n            }}\n            inputProps={{ style: { textAlign: 'center' } }}\n          />\n        </Grid>\n        <Grid item xs={5} className={classes.optionTableMainHeader}>\n          <TypoGraphy variant=\"body1\" align=\"center\" style={{ margin: \"5px\" }}>\n            Puts\n          </TypoGraphy>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default OptionChainHeader;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { columnNames } from '../pages/optionChain/tableData';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles({\n    buttonStyle: {\n        width: 200,\n        height: 40,\n        borderRadius: 20,\n        margin: 10,\n        background: \"#39A2DB\",\n        marginLeft: 10,\n    },\n    underline: {\n        '&:before': {\n            borderBottom: \"0px\",\n        },\n        '&:after': {\n            borderBottom: \"0px\",\n        },\n    },\n})\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 16.6 + ITEM_PADDING_TOP,\n        },\n    },\n};\n\nconst colNames = [\n    'Bid',\n    'Ask',\n    'ATP (VWAP)',\n    'LTP',\n    'LTP chg (Close)',\n    'LTP chg (Open)',\n    'Open Int (OI)',\n    'Volume',\n    'Impl Vol (IV)',\n    'IV Chg',\n    'Open',\n    'High',\n    'Low',\n    'OF-CumDelta',\n    'Delta',\n    'Theta',\n    'Gamma',\n    'Vega',\n    'Price-OI',\n];\n\n\nconst ExpiryColumnSelect = () => {\n\n    const classes = useStyles();\n    const [colName, setColName] = useState([]);\n    const dispatch = useDispatch();\n\n\n    const handleChange = (e) => {\n        setColName(e.target.value)\n        let colsHidden = []\n        for (let i = 0; i < columnNames.length; i++) {\n            for (let j = 0; j < e.target.value.length; j++) {\n                if (e.target.value[j] === columnNames[i].title) {\n                    colsHidden.push(columnNames[i].name)\n                }\n            }\n        }\n        dispatch({ type: 'SET_EXPIRY_COLS', payload: colsHidden })\n    }\n\n    return (\n        <>\n            <Grid container spacing={0}>\n                <Grid item xs={2} style={{ marginLeft: 30 }}>\n                    <Button className={classes.buttonStyle}>\n                        Settings\n                            <FormControl >\n                            <Select\n                                id=\"column-chooser-checkbox\"\n                                variant=\"filled\"\n                                multiple\n                                autoWidth={true}\n                                value={colName}\n                                onChange={handleChange}\n                                input={<Input className={classes.underline} />}\n                                renderValue={(selected) => ''}\n                                MenuProps={MenuProps}\n                            >\n                                {colNames.map((name) => (\n                                    <MenuItem key={name} value={name}>\n                                        <Checkbox checked={colName.indexOf(name) > -1} />\n                                        <ListItemText primary={name} />\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default ExpiryColumnSelect;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBox from '../components/SearchBox';\nimport DropDown from '../components/Dropdown';\nimport OptionToggle from '../components/OptionToggle';\nimport OptionChainTable from '../pages/optionChain/OptionChainTable';\nimport DisplayHeader from '../components/DisplayHeader';\nimport ExpiryTable from '../pages/optionChain/ExpiryTable';\nimport OptionChainHeader from '../pages/optionChain/OptionChainHeader';\nimport ColumnSelect from '../components/ColumnSelect';\nimport ExpiryColumnSelect from \"../components/ExpiryColumnSelect\";\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: 30,\n    },\n    table: {\n        margin: 20,\n        marginLeft: 5,\n\n    }\n}));\n\nconst OptionChain = () => {\n\n    const classes = useStyles();\n    const time = useSelector((state) => state.expiryInstrument.lastUpdateTime)\n\n    return (\n        <>\n            <DisplayHeader displayHeaderName=\"Option Chain\" />\n            <div className={classes.root}>\n                <Grid container spacing={2} >\n                    <Grid item xs={12} lg={3}>\n                        <SearchBox />\n                    </Grid>\n                    <Grid item xs={12} lg={2}>\n                        <DropDown />\n                    </Grid>\n                    <Grid item xs={12} lg={2}>\n                        <OptionToggle />\n                    </Grid>\n                    <Grid item xs={12} lg={2}>\n                        <p style={{ textAlign: \"center\" }}>{time}</p>\n                    </Grid>\n                    <Grid item xs={12} lg={2} >\n                        <ExpiryColumnSelect />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} className={classes.table}>\n                        <ExpiryTable />\n                    </Grid>\n                </Grid>\n                <Grid container style={{\n                    display: \"flex\",\n                    justifyContent: 'flex-end',\n                    alignItems: 'flex-end',\n                }}\n                >\n                    <Grid item xs={12} style={{ marginLeft: 1390 }}>\n                        <ColumnSelect />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} className={classes.table}>\n                        <OptionChainHeader />\n                        <OptionChainTable />\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default OptionChain;","import dayjs from 'dayjs';\nconst instrumentInitialState = {\n    instrument: 'BANKNIFTY',\n    date: \"2021-09-02\",\n    futureTokenString: '',\n    spotToken: \"260105\",\n    spotLastPrice: 0,\n    futureTokens: [],\n    futureDates: [],\n    optionCallTokens: [],\n    optionCallTokensString: '',\n    optionPutsTokens: [],\n    optionPutsTokensString: '',\n    atmStrike: 0,\n    atmStrikeToken: 0,\n    strike: [],\n    strikeNumber: 10,\n    lastUpdateTime: dayjs(new Date().toLocaleString()).format('YYYY-MM-DD HH:mm:ss'),\n    instrumentDetailsLoading: false,\n    expiryTableData: [],\n    callRowData: [],\n    putsRowData: [],\n    tradingSymbol: [],\n    channels: [],\n    pcr: [],\n    callOi: [],\n    putOi: []\n}\nexport const setInstrumentReducer = (state = instrumentInitialState, action) => {\n    switch (action.type) {\n        case 'SET_INSTRUMENT':\n            return {\n                ...state,\n                instrument: action.payload,\n            }\n        case 'SET_DATE':\n            return {\n                ...state,\n                date: action.payload,\n            }\n        case 'SET_SPOT_TOKEN':\n            return {\n                ...state,\n                spotToken: action.payload\n            }\n        case 'SET_SPOT_LP':\n            return {\n                ...state,\n                spotLastPrice: action.payload\n            }\n        case 'SET_FUTURE_TOKENS':\n            return {\n                ...state,\n                futureTokens: action.payload,\n            }\n        case 'SET_FUTURE_TOKENS_STRING':\n            return {\n                ...state,\n                futureTokenString: action.payload,\n            }\n        case 'SET_FUTURE_DATES':\n            return {\n                ...state,\n                futureDates: action.payload,\n            }\n        case 'SET_OPTION_CALL_TOKENS':\n            return {\n                ...state,\n                optionCallTokens: action.payload,\n            }\n        case 'SET_OPTION_CALL_TOKEN_STRING': {\n            return{\n                ...state,\n                optionCallTokensString: action.payload,\n            }\n        }\n        case 'SET_OPTION_PUT_TOKEN_STRING': {\n            return{\n                ...state,\n                optionPutsTokensString: action.payload,\n            }\n        }\n        case 'SET_OPTION_PUT_TOKENS':\n            return {\n                ...state,\n                optionPutsTokens: action.payload,\n            }\n        case 'SET_LAST_UPDATE_TIME': {\n            return {\n                ...state,\n                lastUpdateTime: action.payload\n            }\n        }\n        case 'SET_ATM_STRIKE': {\n            return {\n                ...state,\n                atmStrike: action.payload\n            }\n        }\n        case 'SET_ATM_STRIKE_TOKEN': {\n            return {\n                ...state,\n                atmStrikeToken: action.payload\n            }\n        }\n        case 'SET_STRIKE_DATA': {\n            return {\n                ...state,\n                strike: action.payload\n            }\n        }\n        case 'SET_TRADING_SYMBOL': {\n            return {\n                ...state,\n                tradingSymbol: action.payload\n            }\n        }\n        case 'SET_STRIKE_NUMBER': {\n            return {\n                ...state,\n                strikeNumber: action.payload\n            }\n        }\n        case 'SET_EXPIRY_DATA': {\n            return {\n                ...state,\n                expiryTableData: action.payload\n            }\n        }\n        case 'SET_CALL_DATA': {\n            return {\n                ...state,\n                callRowData: action.payload\n            }\n        }\n        case 'SET_PUTS_DATA': {\n            return {\n                ...state,\n                putsRowData: action.payload\n            }\n        }\n        case 'SET_CHANNELS': {\n            return {\n                ...state,\n                channels: action.payload\n            }\n        }\n        case 'SET_CALL_OI': {\n            return {\n                ...state,\n                callOi: action.payload\n            }\n        }\n        case 'SET_PUT_OI': {\n            return {\n                ...state,\n                putOi: action.payload\n            }\n        }\n        case 'SET_PCR': {\n            return {\n                ...state,\n                pcr: action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\n","const colsInitialState = {\n    expiryColsList: [],\n    optionColsList: [],\n\n}\n//reducer to set the selected/hidden cols\nexport const setTableColReducer = (state = colsInitialState, action) => {\n    switch (action.type) {\n        case 'SET_EXPIRY_COLS':\n            return {\n                ...state,\n                expiryColsList: action.payload\n            }\n        case 'SET_OPTION_COLS':\n            return {\n                ...state,\n                optionColsList: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { setInstrumentReducer } from './expiryTableReducer';\nimport { setTableColReducer } from './tableColReducer';\n\nconst rootReducer = combineReducers({\n    expiryInstrument: setInstrumentReducer,\n    tableCols: setTableColReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport OptionChain from './layouts/OptionChainLayout';\nimport rootReducer from './redux/index';\n\nconst App = () => {\n\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <OptionChain />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}